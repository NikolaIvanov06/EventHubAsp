:root {
    --btn-width: 6.5em;
    --btn-height: 2.3em;
    --btn-bg: black;
    --btn-color: white;
    --btn-hover-color: black;
    --btn-hover-bg: white;
    --btn-font-size: 20px;
    --btn-border-radius: 0.625em;
    --btn-transition-speed: 0.5s;
}
.hero {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    height: 100vh;
    background: url('../about_the_eif.jpg') no-repeat center;
    background-size: cover; /* Ensure the image covers the entire section */
    text-align: center;
    color: #333;
    overflow: hidden;
}

.img-logo {
    position: relative;
    width: 270px;
    height: 300px;
    margin: auto;
    margin-bottom: -30px;
    z-index: 1;
}

    .hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to bottom, rgba(0, 0, 0, 0.6) 0%, rgba(0, 0, 0, 1) 100%); /* Gradient overlay */
        z-index: 1;
    }


    .hero h1 {
        font-size: 4rem;
        font-family: 'Cambria Math';
        margin-bottom: 20px;
        color: white;
        position: relative;
        z-index: 3; /* Ensure text is above the overlay and borders */
    }

.hero p {
    font-family: 'Cambria Math';
    font-size: 1.5rem;
    margin-bottom: 40px;
    color: #ffffff;
    position: relative;
    z-index: 3; /* Ensure text is above the overlay and borders */
}

.button {
    --glow-color: rgba(0, 0, 0, 0.8); /* Semi-transparent black for glow */
    --glow-spread-color: rgba(255, 255, 255, 0.6); /* Slightly transparent black */
    --enhanced-glow-color: rgba(255, 0, 255, 0.9); /* Darker black for hover effects */
    --btn-color: rgba(255, 255, 255, 0.7); /* Very dark background color */
    border: 0.25em solid var(--glow-color);
    padding: 1em 3em;
    color: black; /* White text for contrast */
    font-size: 15px;
    font-weight: bold;
    background-color: var(--btn-color);
    text-decoration-line: none;
    border-radius: 1em;
    outline: none;

    text-shadow: 0 0 0.5em var(--glow-color);
    position: relative;
    transition: all 0.3s;
    z-index: 4; /* Ensure button is above everything */
}

    .button::after {
        pointer-events: none;
        content: "";
        position: absolute;
        top: 120%;
        left: 0;
        height: 100%;
        width: 100%;
        filter: blur(2em);
        opacity: 0.7;
        transform: perspective(1.5em) rotateX(35deg) scale(1, 0.6);
    }

    .button:hover {
        color: black; /* Keep text white on hover */
        background-color: var(--btn-color); /* kground becomes glowing */
        box-shadow: 0 0 0.5em 0.15em var(--glow-color), 0 0 2em 1em var(--glow-spread-color), inset 0 0 0.55em 0.15em var(--glow-color);
    }

    .button:active {
        box-shadow: 0 0 0.6em 0.25em var(--glow-color), 0 0 2.5em 2em var(--glow-spread-color), inset 0 0 0.5em 0.25em var(--glow-color);
    }
/* Features Section */
.features {
    padding: 5rem 0;
    background-color: black;
    color: #fff;
    animation: fadeInUp 2s ease-in-out;
    position: relative;
    overflow: hidden; /* Prevent overflow of skewed shapes */
}

    .features::before {
        content: '';
        position: absolute;
        top: -50px; /* Extend slightly above the section */
        left: 0;
        width: 100%;
        height: 150px; /* Height of the transition area */
        background: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), black); /* Blend with the hero section */
        z-index: 1;
    }

.features .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 10px 15px;
    position: relative; /* Ensure content stays above pseudo-elements */
    z-index: 2; /* Above pseudo-elements */
}

.features .row {
    display: flex;
    justify-content: center;
    margin: 0 -10px;
}

.features .col-md-4 {
    flex: 0 0 32%;
    max-width: 32%;
    padding: 0 10px;
    box-sizing: border-box;
}

.feature-card {
    --glow-color: rgba(255, 255, 255, 0.8);
    --glow-spread-color: rgba(255, 255, 255, 0.6);
    --enhanced-glow-color: rgba(255, 255, 255, 0.9);
    border: 1px solid;
    border-color: white;
    padding: 1.5rem;
    background-color: #333;
    border-radius: 10px;
    text-shadow: 0 0 0.5em var(--glow-color);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    margin: 0 10px;
    margin-bottom: 1rem;
    position: relative; /* Ensure cards stay above pseudo-elements */
    z-index: 2; /* Above pseudo-elements */
}

    .feature-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        box-shadow: 0 0 1em 0.25em var(--glow-color), 0 0 4em 1em var(--glow-spread-color), inset 0 0 0.75em 0.25em var(--glow-color);
        text-shadow: 0 0 0.5em var(--glow-color);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

.feature-icon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #ff6f61;
}

.features h3 {
    font-size: 1.5rem;
    margin-bottom: 0.8rem;
    font-family: 'Cambria Math';
    color: #fff;
}

.features p {
    color: #ccc;
    font-family: 'Cambria Math';
}

.row {
    flex-wrap: nowrap;
}

@media (max-width: 768px) {
    .features .row {
        flex-wrap: ;
    }

    .features .col-md-4 {
        flex: 0 0 100%;
        max-width: 100%;
        margin-bottom: 1rem;
    }
}

.cta {
    padding: 6rem 0; /* Increased padding for more breathing space */
    color: #fff;
    background: black;
    animation: fadeIn 2s ease-in-out;
    position: relative; /* Required for pseudo-elements */
    overflow: hidden; /* Prevent overflow of pseudo-elements */
}

    /* Left parallelogram */
    .cta::before {
        content: '';
        position: absolute;
        top: 0;
        left: 100%; /* Start off-screen */
        width: 50%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.1); /* Semi-transparent white */
        transform: skewX(-20deg); /* Tilt inward */
        transform-origin: top left;
        z-index: 1;
    }

    /* Right parallelogram */
    .cta::after {
        content: '';
        position: absolute;
        top: 0;
        right: 100%; /* Start off-screen */
        width: 50%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.1); /* Semi-transparent white */
        transform: skewX(20deg); /* Tilt inward */
        transform-origin: top right;

        z-index: 1;
    }

/* Animation for moving diagonally */
@keyframes moveDiagonally {
    0% {
        transform: skewX(-20deg) translateX(-100%);
    }

    100% {
        transform: skewX(-20deg) translateX(100%);
    }
}

.cta h2 {
    font-size: 3rem; /* Larger font size for impact */
    margin-bottom: 1.5rem;
    color: #fff;
    font-family: 'Cambria Math';
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5); /* Add depth to the text */
    position: relative;
    z-index: 2; /* Ensure text is above the overlay */
}

.cta p {
    font-size: 1.5rem; /* Slightly larger font size */
    color: #ccc;
    font-family: 'Cambria Math';
    margin-bottom: 3rem;
    line-height: 1.6; /* Improved readability */
    text-shadow: 0 1px 5px rgba(0, 0, 0, 0.3); /* Subtle shadow for contrast */
    position: relative;
    z-index: 2; /* Ensure text is above the overlay */
}

.buttonCta {
    width: var(--btn-width);
    height: var(--btn-height);
    margin: 0.5em;
    background: var(--btn-bg);
    color: var(--btn-color);
    border: 1px solid;
    border-color: white;
    border-radius: var(--btn-border-radius);
    font-size: var(--btn-font-size);
    font-weight: bold;
    cursor: pointer;
    position: relative;
    z-index: 1;
    overflow: hidden;
}

   .buttonCta:hover {
        color: var(--btn-hover-color);
    }

    .buttonCta::after {
        content: "";
        background: var(--btn-hover-bg);
        position: absolute;
        z-index: -1;
        left: -150%;
        right: -150%;
        top: 0;
        bottom: 0;
        transform: skewX(-45deg) scale(0, 1);
        transition: all var(--btn-transition-speed);
    }

 .buttonCta:hover::after {
        transform: skewX(-45deg) scale(1, 1);
        transition: all var(--btn-transition-speed);
    }

.features, .cta {
    animation: fadeIn 2s ease-in-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* From Uiverse.io by adamgiebl */
.buttonReq {
    --green: #1BFD9C;
    font-size: 15px;
    padding: 0.7em 2.7em;
    letter-spacing: 0.06em;
    position: relative;
    font-family: inherit;
    border-radius: 0.6em;
    overflow: hidden;
    transition: all 0.3s;
    line-height: 1.4em;
    border: 2px solid var(--green);
    background: linear-gradient(to right, rgba(27, 253, 156, 0.1) 1%, transparent 40%,transparent 60%, rgba(27, 253, 156, 0.1) 100%);
    color: var(--green);
    box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.4), 0 0 9px 3px rgba(27, 253, 156, 0.1);
}

    .buttonReq:hover {
        color: #82ffc9;
        box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.6), 0 0 9px 3px rgba(27, 253, 156, 0.2);
    }

    .buttonReq:before {
        content: "";
        position: absolute;
        left: -4em;
        width: 4em;
        height: 100%;
        top: 0;
        transition: transform .4s ease-in-out;
        background: linear-gradient(to right, transparent 1%, rgba(27, 253, 156, 0.1) 40%,rgba(27, 253, 156, 0.1) 60%, transparent 100%);
    }

    .buttonReq:hover:before {
        transform: translateX(15em);
    }


