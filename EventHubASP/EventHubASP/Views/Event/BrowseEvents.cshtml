@model IEnumerable<EventHubASP.Models.Event>
@{
    var filter = ViewBag.Filter as EventHubASP.Models.EventFilterViewModel ?? new EventHubASP.Models.EventFilterViewModel();
}

<link rel="stylesheet" href="~/css/browseEvents.css" asp-append-version="true" />

<div class="hero">
    <div class="container browse-events-container">
        <h2 class="main-title">Browse Events</h2>

        <div class="filter-search-container">
            <div class="filter-wrapper">
                <button id="filterToggleButton" class="filter-toggle-button">
                    <svg width="19" height="19" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 8px;">
                        <path d="M22 3H2l8 9.46V19l4 2V12.46L22 3z"></path>
                    </svg>
                    Filter Events
                </button>
                <div id="filterSection" class="filter-section">
                    <form method="get" action="/Event/BrowseEvents" class="filter-form">
                        <div class="form-group">
                            <input type="checkbox" id="sortByDate" name="SortByDate" value="true" @(filter.SortByDate ? "checked" : "") />
                            <label for="sortByDate">Sort by Date [Newest]</label>
                        </div>
                        <div class="form-group">
                            <input type="checkbox" id="sortByTitleLength" name="SortByTitleLength" value="true" @(filter.SortByTitleLength ? "checked" : "") />
                            <label for="sortByTitleLength">Sort by Title [A-Z]</label>
                        </div>
                        <div class="form-group">
                            <label for="filterByDate">Filter by Date</label>
                            <input type="date" id="filterByDate" name="FilterByDate" value="@(filter.FilterByDate?.ToString("yyyy-MM-dd") ?? "")" />
                        </div>
                        <button type="submit" class="btn apply-filter-button">Apply Filters</button>
                    </form>
                </div>
            </div>

            <div class="search-bar">
                <input type="text" id="searchInput" placeholder="Search events..." value="@(filter.SearchQuery ?? "")" />
            </div>
        </div>
        <div class="row events-container" id="eventsContainer">
            @if (Model.Count() != 0)
            {
                @foreach (var eventItem in Model)
                {
                    <div class="col-md-4 event-item" data-title="@eventItem.Title.ToLower()">
                        <div class="event-card">
                            <div class="event-card-inner">
                                <img src="@eventItem.ImageUrl" class="event-image" alt="Event Image">
                                <div class="event-details">
                                    <h5 class="event-title">@eventItem.Title</h5>
                                    <p class="event-description">@eventItem.Description</p>
                                    <p class="event-meta"><strong>Date:</strong> @eventItem.Date.ToString("MMM dd, yyyy")</p>
                                    <p class="event-meta"><strong>Location:</strong> @eventItem.Location</p>
                                    <div class="event-buttons">
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <form method="post" action="/Event/DeleteEvent">
                                                <input type="hidden" name="eventId" value="@eventItem.EventID" />
                                                <button type="submit" class="btn btn-danger"
                                                        onclick="return confirm('Are you sure you want to delete this event?');">
                                                    Delete Event
                                                </button>
                                            </form>
                                        }
                                        else if (User.IsInRole("User"))
                                        {
                                            <form method="post" asp-controller="Event" asp-action="Subscribe">
                                                <input type="hidden" name="eventId" value="@eventItem.EventID" />
                                                <button type="submit" class="btn btn-primary">Subscribe</button>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <h5 class="no-events">No Events Available</h5>
            }
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const filterToggleButton = document.getElementById('filterToggleButton');
        const filterSection = document.getElementById('filterSection');
        const searchInput = document.getElementById('searchInput');
        const eventsContainer = document.getElementById('eventsContainer');
        const eventItems = document.querySelectorAll('.event-item');
        const eventCards = document.querySelectorAll('.event-card');

        // Filter toggle
        filterToggleButton.addEventListener('mouseenter', () => {
            filterSection.style.display = 'block';
            setTimeout(() => { filterSection.style.opacity = '1'; }, 10);
            filterToggleButton.classList.add('hover');
        });

        filterToggleButton.addEventListener('mouseleave', () => {
            if (!filterSection.matches(':hover')) {
                filterSection.style.opacity = '0';
                setTimeout(() => { filterSection.style.display = 'none'; }, 300);
                filterToggleButton.classList.remove('hover');
            }
        });

        filterSection.addEventListener('mouseenter', () => {
            filterSection.style.display = 'block';
            filterSection.style.opacity = '1';
            filterToggleButton.classList.add('hover');
        });

        filterSection.addEventListener('mouseleave', () => {
            if (!filterToggleButton.matches(':hover')) {
                filterSection.style.opacity = '0';
                setTimeout(() => { filterSection.style.display = 'none'; }, 300);
                filterToggleButton.classList.remove('hover');
            }
        });

        // Search functionality with animation
        searchInput.addEventListener('input', function () {
            const query = this.value.toLowerCase();
            eventItems.forEach(item => {
                const title = item.getAttribute('data-title');
                if (title.includes(query)) {
                    item.style.display = 'block';
                    item.style.opacity = '0';
                    item.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        item.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
                        item.style.opacity = '1';
                        item.style.transform = 'scale(1)';
                    }, 10);
                } else {
                    item.style.opacity = '0';
                    item.style.transform = 'scale(0.95)';
                    setTimeout(() => { item.style.display = 'none'; }, 300);
                }
            });
        });
    });
</script>