@model EventHubASP.Models.EventViewModel

@{
    ViewData["Title"] = "Create Event";
}

<link rel="stylesheet" href="~/css/createEvent.css" asp-append-version="true" />

<div class="hero">
    <div class="container create-event-container">
        <h2 class="create-event-header">Create Event</h2>
        <form asp-action="CreateEvent" asp-controller="Event" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="All" class="create-event-validation-error"></div>

            <div class="create-event-form-group">
                <label asp-for="Title" class="create-event-label"></label>
                <input asp-for="Title" autocomplete="off"class="create-event-input create-event-input-title" placeholder="Enter a title" />
                <span asp-validation-for="Title" class="create-event-validation-error"></span>
            </div>
            <div class="create-event-form-group">
                <label asp-for="Description" class="create-event-label"></label>
                <textarea asp-for="Description"  class="create-event-input" placeholder="Write something..."></textarea>
                <span asp-validation-for="Description" class="create-event-validation-error"></span>
            </div>
            <div class="create-event-form-group">
                <label asp-for="Date" class="create-event-label"></label>
                <input asp-for="Date" class="create-event-input create-event-input-date" type="date" autocomplete="off"/>
                <span asp-validation-for="Date" class="create-event-validation-error"></span>
            </div>

            <div class="create-event-form-group">
                <label asp-for="Location" class="create-event-label"></label>
                <input asp-for="Location" class="create-event-input create-event-input-location" placeholder="Enter a location" autocomplete="off"/>
                <span asp-validation-for="Location" class="create-event-validation-error"></span>
            </div>
            <div class="create-event-form-group">
                <label asp-for="ImageUrl" class="create-event-label">Image URL</label>
                <input asp-for="ImageUrl" class="create-event-input create-event-input-url" type="url" placeholder="Enter an image URL" autocomplete="off"/>
                <span asp-validation-for="ImageUrl" class="create-event-validation-error"></span>
                <p class="create-event-meta">or</p>
                <label for="fileUpload" class="drop-container" id="dropContainer">
                    <span class="drop-title">Drop files here</span>
                    or
                    <input type="file" id="fileUpload" name="fileUpload" class="create-event-file-input" accept="image/*" />
                </label>
                <button type="button" id="removeFile" class="create-event-submit create-event-remove-btn" style="display: none;">Remove File</button>
            </div>
            <button type="submit" class="create-event-submit">Create Event</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
    <script>
        document.getElementById('fileUpload').addEventListener('change', function (event) {
            var file = event.target.files[0];
            if (file) {
                document.querySelector('label[for="ImageUrl"]').style.display = 'none';
                document.querySelector('input[name="ImageUrl"]').style.display = 'none';
                document.querySelector('p').style.display = 'none';
                document.getElementById('removeFile').style.display = 'inline-block';

                var formData = new FormData();
                formData.append('file', file);
                formData.append('upload_preset', 'eventhub-img-insertion');

                fetch('https://api.cloudinary.com/v1_1/your-cloud-name/image/upload', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.secure_url) {
                            document.querySelector('input[name="ImageUrl"]').value = data.secure_url;
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            } else {
                document.querySelector('label[for="ImageUrl"]').style.display = 'block';
                document.querySelector('input[name="ImageUrl"]').style.display = 'block';
                document.querySelector('p').style.display = 'block';
                document.getElementById('removeFile').style.display = 'none';
            }
        });

        document.getElementById('removeFile').addEventListener('click', function () {
            document.getElementById('fileUpload').value = '';
            document.querySelector('label[for="ImageUrl"]').style.display = 'block';
            document.querySelector('input[name="ImageUrl"]').style.display = 'block';
            document.querySelector('p').style.display = 'block';
            document.getElementById('removeFile').style.display = 'none';
        });

        document.querySelector('.create-event-input-date').addEventListener('focus', function () {
            this.showPicker();
        });

        var dropContainer = document.getElementById('dropContainer');
        dropContainer.addEventListener('dragover', function (e) {
            e.preventDefault();
            dropContainer.classList.add('dragover');
        });

        dropContainer.addEventListener('dragleave', function (e) {
            dropContainer.classList.remove('dragover');
        });

        dropContainer.addEventListener('drop', function (e) {
            e.preventDefault();
            dropContainer.classList.remove('dragover');
            var fileInput = document.getElementById('fileUpload');
            fileInput.files = e.dataTransfer.files;
            fileInput.dispatchEvent(new Event('change'));
        });
    </script>
}